{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","changeSelectedGoods","good","includes","index","indexOf","splice","push","setState","clearGoods","setHeading","length","slice","join","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,oBAAsB,SAACC,GACrB,IAAQF,EAAiB,EAAKD,MAAtBC,aAER,GAAIA,EAAaG,SAASD,GAAO,CAC/B,IAAME,EAAQJ,EAAaK,QAAQH,GAEnCF,EAAaM,OAAOF,EAAO,QAE3BJ,EAAaO,KAAKL,GAGpB,EAAKM,SAAS,CAAER,kB,EAGlBS,WAAa,WACX,EAAKD,SAAS,CAAER,aAAc,M,EAGhCU,WAAa,WACX,IAAQV,EAAiB,EAAKD,MAAtBC,aAER,OAA4B,IAAxBA,EAAaW,OACT,mBAAN,OAA0BX,GAGtB,mBAAN,OAA0BA,EAAaY,MAAM,GAAI,GAAGC,KAAK,MAAzD,gBAAsEb,EAAaY,OAAO,K,4CAG5F,WAAU,IAAD,OACCZ,EAAiBc,KAAKf,MAAtBC,aAER,OACE,sBAAKe,UAAU,YAAf,UACE,qBAAIA,UAAU,QAAd,UACGf,EAAaW,OAAS,EACnBG,KAAKJ,aACL,oBACHV,EAAaW,OAAS,GACrB,wBACEK,KAAK,SACLD,UAAU,kBACVE,QAASH,KAAKL,WAHhB,0BAUJ,6BACGZ,EAAgBqB,KAAI,SAAAhB,GACnB,OACE,sBAAKa,UAAU,UAAf,UACE,oBAEEA,UAAS,qDACLf,EAAaG,SAASD,GAC1B,+BACA,IALF,SAOGA,GANIA,GAQP,wBACEa,UAAS,sDACLf,EAAaG,SAASD,GAC1B,YACA,cACAc,KAAK,SACLC,QAAS,WACP,EAAKhB,oBAAoBC,IAP7B,SAUGF,EAAaG,SAASD,GACnB,SACA,0B,GA9EJiB,IAAMC,WAyFTtB,IC1GfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29f2b0ff.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  changeSelectedGoods = (good: string) => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.includes(good)) {\n      const index = selectedGood.indexOf(good);\n\n      selectedGood.splice(index, 1);\n    } else {\n      selectedGood.push(good);\n    }\n\n    this.setState({ selectedGood });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  setHeading = () => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.length === 1) {\n      return `Selected goods: ${selectedGood}`;\n    }\n\n    return `Selected goods: ${selectedGood.slice(0, -1).join(', ')} and ${selectedGood.slice(-1)}`;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">\n          {selectedGood.length > 0\n            ? this.setHeading()\n            : 'No selected goods'}\n          {selectedGood.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"button is-right\"\n              onClick={this.clearGoods}\n            >\n              Clear all\n            </button>\n          )}\n        </h1>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            return (\n              <div className=\"columns\">\n                <li\n                  key={good}\n                  className={`column is-four-fifths\n                    ${selectedGood.includes(good)\n                ? 'has-background-success-light'\n                : ''}`}\n                >\n                  {good}\n                </li>\n                <button\n                  className={`column button is-light\n                    ${selectedGood.includes(good)\n                ? 'is-danger'\n                : 'is-success'}`}\n                  type=\"button\"\n                  onClick={() => {\n                    this.changeSelectedGoods(good);\n                  }}\n                >\n                  {selectedGood.includes(good)\n                    ? 'Remove'\n                    : 'Select'}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}